# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @upper on FIELD_DEFINITION

"""Authentication"""
type AuthModel {
  id: ID!
  email: String!
  username: String!
  name: String!
  avatar: String!
  createdAt: String!
}

"""Authentication"""
type AdminModel {
  id: ID!
  email: String!
  username: String!
  avatar: String!
  createdAt: String!
  role: String!
}

type Product {
  id: Int!
  title: String!
  price: Float!
  quantity: Int!
  category: String!
  subCategory: String!
  images: [String!]!
}

type MultipleProducts {
  counts: Int!
  message: String!
}

type ProductImage {
  id: Int!
  url: String!
  publicId: String
  isExternal: Boolean!
}

type SingleHomeProduct {
  id: Int!
  title: String!
  price: Float!
  quantity: Int!
  category: String!
  subCategory: String!
  images: [ProductImage!]!
  isInCart: Boolean
  isInWishlist: Boolean
}

type SendMessage {
  message: String!
  status: Float!
  where: String!
  data: String
}

type CartModel {
  id: Int!
  productId: Int!
  userId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  quantity: Int!
  product: Product!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  adminAuth(adminAuthInput: AdminAuthInput!): AdminModel!
  getSingleProduct(id: String!): SingleHomeProduct!
  getCart: [CartModel!]!
}

input AdminAuthInput {
  """The email of admin"""
  email: String!

  """Passkey of admin"""
  passkey: String!
}

type Mutation {
  createUser(createAuthInput: CreateAuthInput!): AuthModel!
  createProduct(createProductInput: CreateProductInput!): Product!
  createMultipleProducts(createProductInputs: [CreateProductInput!]!): MultipleProducts!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!
  addToCart(productId: String!, quantity: Float!): Product!
  toggleWishlist(productId: String!): SendMessage!
}

input CreateAuthInput {
  """The email of the user"""
  email: String!

  """The password of the user"""
  password: String!

  """The password of the user"""
  confirmPassword: String!

  """The name of the user"""
  name: String!
}

input CreateProductInput {
  title: String!
  price: Float!
  quantity: Int!
  category: String!
  subCategory: String!
  images: [String!]!
}

input UpdateProductInput {
  title: String
  price: Float
  quantity: Int
  category: String
  subCategory: String
  images: [String!]
  id: Int!
}