# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @upper on FIELD_DEFINITION

"""Authentication"""
type AuthModel {
  id: ID!
  email: String!
  username: String!
  name: String!
  avatar: String!
  createdAt: String!
}

"""Authentication"""
type AdminModel {
  id: ID!
  email: String!
  username: String!
  avatar: String!
  createdAt: String!
  role: String!
}

type Product {
  id: Int!
  title: String!
  price: Float!
  quantity: Int!
  category: String!
  subCategory: String!
  images: [String!]!
}

type MultipleProducts {
  counts: Int!
  message: String!
}

type ProductImage {
  id: Int!
  url: String!
  publicId: String
  isExternal: Boolean!
}

type SingleHomeProduct {
  id: Int!
  title: String!
  price: Float!
  quantity: Int!
  category: String!
  subCategory: String!
  images: [ProductImage!]!
}

type Query {
  logIn(logInAuthInput: LoginAuthInput!): AuthModel!
  adminAuth(adminAuthInput: AdminAuthInput!): AdminModel!
  getFeaturedProducts(GetHomeProductsInput: GetHomeProductsInput!): [SingleHomeProduct!]!
  getSingleProduct(id: String!): SingleHomeProduct!
}

input LoginAuthInput {
  """The email of the user"""
  email: String!

  """The password of the user"""
  password: String!
}

input AdminAuthInput {
  """The email of admin"""
  email: String!

  """Passkey of admin"""
  passkey: String!
}

input GetHomeProductsInput {
  limit: Int!
  offset: Int!
  category: String!
  subCategory: String!
}

type Mutation {
  createUser(createAuthInput: CreateAuthInput!): AuthModel!
  createProduct(createProductInput: CreateProductInput!): Product!
  createMultipleProducts(createProductInputs: [CreateProductInput!]!): MultipleProducts!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!
}

input CreateAuthInput {
  """The email of the user"""
  email: String!

  """The password of the user"""
  password: String!

  """The password of the user"""
  confirmPassword: String!

  """The name of the user"""
  name: String!
}

input CreateProductInput {
  title: String!
  price: Float!
  quantity: Int!
  category: String!
  subCategory: String!
  images: [String!]!
}

input UpdateProductInput {
  title: String
  price: Float
  quantity: Int
  category: String
  subCategory: String
  images: [String!]
  id: Int!
}